{"version":3,"sources":["components/AddCourse.js","components/ApiTest.js","components/CourseApi.js","components/Lists.js","components/ToDoApp.js","components/LeranGrid.js","components/News.js","App.js","reportWebVitals.js","index.js"],"names":["Component","News","props","state","news","loadStatus","getData","setState","Axios","get","then","response","console","log","data","articles","course","root","maxWidth","media","height","paddingTop","Button","onClick","this","Grid","container","item","xs","sm","md","CircularProgress","color","map","value","index","Card","style","CardHeader","avatar","Avatar","action","IconButton","title","subheader","publishedAt","CardMedia","image","urlToImage","CardContent","Typography","variant","component","description","CardActions","disableSpacing","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAIuCA,Y,WCAFA,YCAEA,YCDJA,YCAEA,YCEEA,Y,sECAlBC,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAIVC,MAAM,CACFC,KAAK,GACLC,YAAW,GAPG,EAUjBC,QAAQ,WACJ,EAAKC,SAAS,CAACF,YAAW,IAC1BG,IAAMC,IAAI,2FAA2FC,MACjG,SAACC,GACGC,QAAQC,IAAIF,EAASG,KAAKC,UAE1B,EAAKR,SAAS,CACVH,KAAKO,EAASG,KAAKC,SACnBV,YAAW,IAGfO,QAAQC,IAAI,EAAKG,YArBZ,EA2BlBC,KAAM,CACFC,SAAU,KA5BI,EA8BhBC,MAAM,CACJC,OAAQ,EACRC,WAAY,UA9Bb,EAAKf,UAFU,E,0CAuClB,WAAU,IAAD,OACL,OACI,gCAIZ,cAACgB,EAAA,EAAD,CAAQC,QAASC,KAAKlB,QAAtB,yBAEA,cAACmB,EAAA,EAAD,CAAMC,WAAS,EAAf,SAEI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,MAWhCN,KAAKrB,MAAME,WA8CO,cAAC0B,EAAA,EAAD,CAAkBC,MAAM,cA7C3B,eAACP,EAAA,EAAD,CAAMC,WAAS,EAAf,iBAAqBF,KAAKrB,MAAMC,KAAK6B,KAAK,SAACC,EAAMC,GAE1C,OAAO,qCAAO,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SAGtC,eAACM,EAAA,EAAD,CAAMC,MAAO,EAAKpB,KAAlB,UACM,cAACqB,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CAAQ,aAAW,SAASH,MAAO,EAAKE,OAAxC,eAIFE,OACE,cAACC,EAAA,EAAD,CAAY,aAAW,aAIzBC,MAAOT,EAAMS,MACbC,UAAWV,EAAMW,cAEnB,cAACC,EAAA,EAAD,CAEEC,MAAOb,EAAMc,WACbL,MAAM,gBAER,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQnB,MAAM,gBAAgBoB,UAAU,IAA5D,SACClB,EAAMmB,gBAGT,cAACC,EAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,cAACb,EAAA,EAAD,CAAY,aAAW,4BA7BA,aAFd,e,GA/DiB1C,aCuBnBwD,MApBf,WAGE,OACE,qBAAKC,UAAU,MAAf,SAWC,cAAC,EAAD,OCXUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.694e5ffa.chunk.js","sourcesContent":["import { Button, Grid,TextField } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport Axios from 'axios'\n\nexport default class AddCourse extends Component {\n  \n    state={\n        courseTitle:\"\",\n        courseDescription:\"\",\n        courseDate:\"\",\n        courseDuration:\"\",\n        courseVenue:\"\"\n    }\n\n    onHandleChange= event=> {\n        this.setState({\n            [event.target.name]:event.target.value\n   \n        })\n    }\n\n    btnclickchange=()=>{\n\nconsole.log(this.state)\n\nthis.addData(this.state)\n    }\n\n    addData=(x)=>{\n        Axios.post(\"https://mylinkurcodesapp.herokuapp.com/addcourse\",x).then(\n            (response)=>{\n                console.log(response)\n            }\n        )\n\n   }\n\n    render() {\n        return (\n       <Grid container>\n\n           <Grid item xs={12} sm={2} md={2} lg={2}></Grid>\n           <Grid item xs={12} sm={8} md={8} lg={8}>\n\n<TextField\nrequired\n placeholder=\"Title\"\n  margin=\"normal\" \n  fullWidth\n   variant=\"outlined\" \n   name=\"courseTitle\"\n   onChange={this.onHandleChange} />\n<TextField \nonChange={this.onHandleChange}\nplaceholder=\"enter Description\"\nmargin=\"normal\"\nfullWidth\nvariant=\"outlined\" \nname=\"courseDescription\"/>\n\n<TextField \ntype=\"date\"\nonChange={this.onHandleChange}\nplaceholder=\"course Date\"\nmargin=\"normal\"\nfullWidth\nvariant=\"outlined\" \nname=\"courseDate\"/>\n\n\n<TextField \nonChange={this.onHandleChange}\nplaceholder=\"course Duration\"\nmargin=\"normal\"\nfullWidth\nvariant=\"outlined\" \nname=\"courseDuration\"/>\n\n<TextField \nonChange={this.onHandleChange}\nplaceholder=\"course Venue\"\nmargin=\"normal\"\nfullWidth\nvariant=\"outlined\" \nname=\"courseVenue\"/>\n\n<Button\n onClick={this.btnclickchange} \n fullWidth \n color=\"primary\" \n type=\"submit\"\n variant=\"contained\" > SUBMIT</Button>\n\n           </Grid>\n           <Grid item xs={12} sm={2} md={2} lg={2}></Grid>\n\n\n\n\n       </Grid>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Button,CircularProgress } from '@material-ui/core'\n\nexport default class ApiTest extends Component {\n\n    state={\n        joke:\"\",\n        isLoading: false,\n    }\n\n     getData=()=>{\n         this.setState({isLoading:true})\n         \n         Axios.get(\"https://official-joke-api.appspot.com/random_joke\").then(\n             (response)=>{\n                 console.log(response)\n\n                 this.setState({\n\n                     joke:response.data.setup +\"...\"+ response.data.punchline,\n                     isLoading:false\n                 })\n             }\n         )\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.getData}>Get joke</Button>\n\n                {!this.state.isLoading ? (\n                    this.state.joke\n                ) : <CircularProgress color=\"secondary\" /> }\n            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Button,CircularProgress } from '@material-ui/core'\n\nexport default class CourseApi extends Component {\n\n    state={\n        course:[],\n        loadStatus:false\n    }\n\n     getData=()=>{\n         this.setState({loadStatus:true})\n         Axios.get(\"https://mylinkurcodesapp.herokuapp.com/getcourses\").then(\n             (response)=>{\n                 console.log(response)\n\n                 this.setState({\n                     course:response.data,\n                     loadStatus:false\n                 })\n\n                 console.log(this.course)\n             }\n         )\n\n    }\n\n    render() {\n        return (\n            <div>\n\n<Button onClick={this.getData}>Get Courses</Button>\n\n\n{!this.state.loadStatus ? (\n                    <ul> {this.state.course.map( (value,index)=>{\n\n                        return <div>\n                            <li key={index}> {value.courseTitle}</li>\n                      \n                             </div> \n                \n                    } )} </ul>\n\n\n                ) : <CircularProgress color=\"secondary\" /> }\n\n    \n</div>\n         \n        )\n    }\n}\n","import { Divider } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nexport default class Lists extends Component {\n    state={\n        data:[\n            {\n                \"name\":\"Anish\",\n                \"age\":45,\n\n            },\n            {\n                \"name\":\"Anoop\",\n                \"age\":43,\n                \n            },\n            {\n                \"name\":\"Rahul\",\n                \"age\":35,\n                \n            },\n\n        ]\n    }\n    render() {\n        return (\n          \n<div>\n    <ul> {this.state.data.map( (value,index)=>{\n\n        return <li key={index}> {value.name}</li>\n    } )} </ul>\n</div>\n        )\n    }\n}\n","import { Button, Grid,TextField } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nexport default class ToDoApp extends Component {\n  \n    state={\n        title:\"\",\n        description:\"\",\n    }\n\n    onHandleChange= event=> {\n        this.setState({\n            [event.target.name]:event.target.value\n   \n        })\n    }\n\n    btnclickchange=()=>{\n\nconsole.log(this.state)\n    }\n\n    render() {\n        return (\n       <Grid container>\n\n           <Grid item xs={12} sm={2} md={2} lg={2}></Grid>\n           <Grid item xs={12} sm={8} md={8} lg={8}>\n\n<TextField\n placeholder=\"Title\"\n  margin=\"normal\" \n  fullWidth\n   variant=\"outlined\" \n   name=\"title\"\n   onChange={this.onHandleChange} />\n<TextField \nonChange={this.onHandleChange}\nplaceholder=\"Description\"\nmargin=\"normal\"\nfullWidth\nvariant=\"outlined\" \nname=\"description\"/>\n\n<Button\n onClick={this.btnclickchange} \n fullWidth \n color=\"primary\" \n type=\"submit\"\n variant=\"contained\" > SUBMIT</Button>\n\n           </Grid>\n           <Grid item xs={12} sm={2} md={2} lg={2}></Grid>\n\n\n\n\n       </Grid>\n        )\n    }\n}\n","import { Grid, TextField } from '@material-ui/core'\nimport React, { Component } from 'react'\n\n\n\nexport default class LeranGrid extends Component {\n\n\n  \n    gridContainerStyle= {\n      paddingLeft: \"100px\",\n      paddingRight: \"40px\"\n    }\n\n\n    bgstyle={background: 'linear-gradient(45deg, #FE6B8B , #FF8E53 )',}\n   \n    root= {\n      // background: 'linear-gradient(45deg, #FE6B8B , #FF8E53 )',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      //  height: 1200,\n      paddingLeft: \"40px\",\n      paddingRight: \"40px\",\n      padding:\"30px\"\n    }\n  \n\n\n    render() {\n\n        return (\n            <div style={this.bgstyle}>\n                <Grid container\n                spacing={4}\n                style={this.root}\n                \n                >\n                    <Grid item xs={12} sm={6} md={4} >\n<TextField label=\"Enter name\"  color=\"primary\" placeholder=\"name\" fullWidth variant=\"outlined\"/>\n                    </Grid>\n \n                \n\n\n                <Grid item xs={12} sm={6} md={4}>\n                <TextField label=\"Enter Roll no\" placeholder=\"Roll no\" fullWidth variant=\"outlined\"/>\n                </Grid>\n\n\n\n\n                <Grid item xs={12} sm={6} md={4}>\n                <TextField placeholder=\"name\" fullWidth variant=\"outlined\"/>\n                </Grid>\n \n                </Grid>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Avatar, Button,Card,CardActions,CardContent,CardHeader,CardMedia,CircularProgress, Collapse, Grid, IconButton, Typography } from '@material-ui/core'\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n\nexport default class News extends Component {\n\n    constructor(props){  \n        super(props);  \n       this.getData() \n      }  \n\n    state={\n        news:[],\n        loadStatus:false\n    }\n\n     getData=()=>{\n         this.setState({loadStatus:true})\n         Axios.get(\"https://newsapi.org/v2/top-headlines?country=in&apiKey=9b6ac262eea44bcbbf80ae1b064f631d\").then(\n             (response)=>{\n                 console.log(response.data.articles)\n\n                 this.setState({\n                     news:response.data.articles,\n                     loadStatus:false\n                 })\n\n                 console.log(this.course)\n             }\n         )\n\n    }\n\n    root= {\n        maxWidth: 345,\n      }\n      media={\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n      }\n      \n    //   avatar= {\n    //     backgroundColor: red[500],\n    //   }\n\n    render() {\n        return (\n            <div>\n\n                \n\n<Button onClick={this.getData}>Get Courses</Button>\n\n<Grid container>\n\n    <Grid item xs={12} sm={6} md={4}>\n\n\n   \n\n    </Grid>\n\n\n</Grid>\n\n\n{!this.state.loadStatus ? (\n                 <Grid container>    {this.state.news.map( (value,index)=>{\n\n                        return <div>  <Grid item xs={12} sm={12} md={12}>\n\n\n<Card style={this.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" style={this.avatar}>\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            {/* <MoreVertIcon /> */}\n          </IconButton>\n        }\n        title={value.title}\n        subheader={value.publishedAt}\n      />\n      <CardMedia\n        // className={classes.media}\n        image={value.urlToImage}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {value.description}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          {/* <FavoriteIcon /> */}\n        </IconButton>\n      \n       \n      </CardActions>\n     \n    </Card>\n                      \n                         </Grid>    </div> \n                \n                    } )}  </Grid>\n\n\n                ) : <CircularProgress color=\"secondary\" /> }\n\n    \n</div>\n         \n        )\n    }\n}\n","import AddCourse from './components/AddCourse';\nimport ApiTest from './components/ApiTest';\nimport CourseApi from './components/CourseApi';\nimport Lists from './components/Lists';\nimport ToDoApp from './components/ToDoApp';\nimport LeranGrid from './components/LeranGrid';\nimport News from './components/News';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      {/* <ApiTest /> */}\n\n      {/* <AddCourse />\n      <CourseApi/> */}\n      {/* <Lists />\n\n     <ToDoApp /> */}\n\n     {/* <LeranGrid /> */}\n\n     <News />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}